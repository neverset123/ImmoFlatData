name: ImmoAgent Workflow

on:
  workflow_dispatch: # Trigger manually

jobs:
  rate_limited_job:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: false
    steps:
      - name: Check Time Difference
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          LAST_RUN=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" \
            "https://api.github.com/repos/neverset123/ImmoFlatData/actions/workflows/Agent_trigger.yaml/runs?status=success&per_page=1" \
            | jq -r '.workflow_runs[0].created_at')
          if [ -z "$LAST_RUN" ] || [ "$LAST_RUN" == "null" ]; then
            echo "Error: Unable to retrieve the last successful run timestamp."
            exit 1
          fi
          echo "Last successful run was: $LAST_RUN"

          # Get the current time in UTC
          NOW=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          echo "Now is: $NOW"

          # Convert LAST_RUN to seconds since epoch
          LAST_RUN_SECONDS=$(date -u -d "$(echo $LAST_RUN | sed 's/Z//')" +%s)
          echo "Last successful run in seconds since epoch: $LAST_RUN_SECONDS"

          # Convert NOW to seconds since epoch
          NOW_SECONDS=$(date -u -d "$NOW" +%s)
          echo "Current time in seconds since epoch: $NOW_SECONDS"

          # Calculate the time difference in seconds
          DIFF=$((NOW_SECONDS - LAST_RUN_SECONDS))
          echo "Time difference in seconds: $DIFF"

          if [ "$DIFF" -lt 300 ]; then
            echo "Rate limit not reached, workflow will be stopped."
            exit 1
          fi
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r script/requirements.txt
      - name: publish data
        env:
          PYTHONPATH: ${{ github.workspace }}
          ENDPOINT: ${{ secrets.ENDPOINT }} 
          APIKEY: ${{ secrets.APIKEY }} 
          CHAT_MODEL: ${{ secrets.CHAT_MODEL }} 
          EMBEDDING_MODEL: ${{ secrets.EMBEDDING_MODEL }} 
          API_VERSION: ${{ secrets.API_VERSION }} 
          NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }} 
          HOME_PAGE_ID: ${{ secrets.HOME_PAGE_ID }} 
          DB_PREFERENCE_ID: ${{ secrets.DB_PREFERENCE_ID }} 
          DB_PROPERTY_ID: ${{ secrets.DB_PROPERTY_ID }} 
          DB_PROPERTY_PAGE_URL: ${{ secrets.DB_PROPERTY_PAGE_URL }} 
        run: |
          python script/embedder.py
          python script/publisher.py